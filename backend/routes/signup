const express = require('express');
const router = express.Router();
const bcrypt = require('bcryptjs');
const User = require('../models/User');
const sendOtp = require('../utils/sendOtp');

const otpStore = {}; // In-memory OTP store (use Redis or DB in production)

router.post('/send-otp', async (req, res) => {
  const { email } = req.body;
  const otp = Math.floor(100000 + Math.random() * 900000); // 6-digit

  otpStore[email] = { otp, expires: Date.now() + 5 * 60 * 1000 }; // 5 min expiry

  try {
    await sendOtp(email, otp);
    res.status(200).json({ message: 'OTP sent to your email!' });
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: 'Failed to send OTP' });
  }
});

router.post('/signup', async (req, res) => {
  const { firstName, lastName, email, password, otp } = req.body;

  const stored = otpStore[email];
  if (!stored || stored.otp != otp || stored.expires < Date.now()) {
    return res.status(400).json({ message: 'Invalid or expired OTP' });
  }

  const hashedPassword = await bcrypt.hash(password, 10);

  const newUser = new User({
    name: `${firstName} ${lastName}`,
    email,
    password: hashedPassword,
    verified: true
  });

  await newUser.save();
  delete otpStore[email]; // cleanup

  res.status(200).json({ message: 'Signup successful!' });
});

module.exports = router;
